// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="hw_label_accel,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.341883,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=158,HLS_SYN_DSP=26,HLS_SYN_FF=6208,HLS_SYN_LUT=6590,HLS_VERSION=2018_3}" *)

module hw_label_accel (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        src_TDATA,
        src_TLAST,
        dst_TDATA,
        dst_TLAST,
        src_TVALID,
        src_TREADY,
        dst_TVALID,
        dst_TREADY
);

parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [7:0] src_TDATA;
input  [0:0] src_TLAST;
output  [15:0] dst_TDATA;
output  [0:0] dst_TLAST;
input   src_TVALID;
output   src_TREADY;
output   dst_TVALID;
input   dst_TREADY;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [31:0] rows;
wire   [31:0] cols;
wire   [15:0] base_data_V_i_q0;
wire   [15:0] base_data_V_t_q0;
wire    Block_Mat_exit354_pr_U0_ap_start;
wire    Block_Mat_exit354_pr_U0_ap_done;
wire    Block_Mat_exit354_pr_U0_ap_continue;
wire    Block_Mat_exit354_pr_U0_ap_idle;
wire    Block_Mat_exit354_pr_U0_ap_ready;
wire   [31:0] Block_Mat_exit354_pr_U0_rows_out_din;
wire    Block_Mat_exit354_pr_U0_rows_out_write;
wire   [31:0] Block_Mat_exit354_pr_U0_cols_out_din;
wire    Block_Mat_exit354_pr_U0_cols_out_write;
wire   [18:0] Block_Mat_exit354_pr_U0_ap_return_0;
wire   [17:0] Block_Mat_exit354_pr_U0_ap_return_1;
wire   [31:0] Block_Mat_exit354_pr_U0_ap_return_2;
wire    ap_channel_done_tmp_9_cast344_loc_ch;
wire    tmp_9_cast344_loc_ch_full_n;
reg    ap_sync_reg_channel_write_tmp_9_cast344_loc_ch;
wire    ap_sync_channel_write_tmp_9_cast344_loc_ch;
wire    ap_channel_done_tmp_9_loc_channel;
wire    tmp_9_loc_channel_full_n;
reg    ap_sync_reg_channel_write_tmp_9_loc_channel;
wire    ap_sync_channel_write_tmp_9_loc_channel;
wire    ap_channel_done_base_size_cast345_lo;
wire    base_size_cast345_lo_full_n;
reg    ap_sync_reg_channel_write_base_size_cast345_lo;
wire    ap_sync_channel_write_base_size_cast345_lo;
wire    Loop_1_proc_U0_ap_start;
wire    Loop_1_proc_U0_ap_done;
wire    Loop_1_proc_U0_ap_continue;
wire    Loop_1_proc_U0_ap_idle;
wire    Loop_1_proc_U0_ap_ready;
wire    Loop_1_proc_U0_src_TREADY;
wire   [17:0] Loop_1_proc_U0_base_data_V_address0;
wire    Loop_1_proc_U0_base_data_V_ce0;
wire    Loop_1_proc_U0_base_data_V_we0;
wire   [15:0] Loop_1_proc_U0_base_data_V_d0;
wire    Loop_1_proc_U0_cols_read;
wire    Loop_1_proc_U0_rows_read;
wire   [8:0] Loop_1_proc_U0_ap_return_0;
wire   [8:0] Loop_1_proc_U0_ap_return_1;
wire    ap_channel_done_rows_cast350_loc_cha;
wire    rows_cast350_loc_cha_full_n;
reg    ap_sync_reg_channel_write_rows_cast350_loc_cha;
wire    ap_sync_channel_write_rows_cast350_loc_cha;
wire    ap_channel_done_cols_cast347_loc_cha;
wire    cols_cast347_loc_cha_full_n;
reg    ap_sync_reg_channel_write_cols_cast347_loc_cha;
wire    ap_sync_channel_write_cols_cast347_loc_cha;
wire    ap_channel_done_base_data_V;
wire    Loop_1_proc_U0_base_data_V_full_n;
reg    ap_sync_reg_channel_write_base_data_V;
wire    ap_sync_channel_write_base_data_V;
wire    xfMat2axis_U0_ap_start;
wire    xfMat2axis_U0_ap_done;
wire    xfMat2axis_U0_ap_continue;
wire    xfMat2axis_U0_ap_idle;
wire    xfMat2axis_U0_ap_ready;
wire   [17:0] xfMat2axis_U0_p_dst_data_V_address0;
wire    xfMat2axis_U0_p_dst_data_V_ce0;
wire   [15:0] xfMat2axis_U0_dst_TDATA;
wire    xfMat2axis_U0_dst_TVALID;
wire   [0:0] xfMat2axis_U0_dst_TLAST;
wire    ap_sync_continue;
wire    base_data_V_i_full_n;
wire    base_data_V_t_empty_n;
wire    rows_c_full_n;
wire   [31:0] rows_c_dout;
wire    rows_c_empty_n;
wire    cols_c_full_n;
wire   [31:0] cols_c_dout;
wire    cols_c_empty_n;
wire   [18:0] base_size_cast345_lo_dout;
wire    base_size_cast345_lo_empty_n;
wire   [17:0] tmp_9_loc_channel_dout;
wire    tmp_9_loc_channel_empty_n;
wire   [31:0] tmp_9_cast344_loc_ch_dout;
wire    tmp_9_cast344_loc_ch_empty_n;
wire   [8:0] cols_cast347_loc_cha_dout;
wire    cols_cast347_loc_cha_empty_n;
wire   [8:0] rows_cast350_loc_cha_dout;
wire    rows_cast350_loc_cha_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_Block_Mat_exit354_pr_U0_ap_ready;
wire    ap_sync_Block_Mat_exit354_pr_U0_ap_ready;
reg   [1:0] Block_Mat_exit354_pr_U0_ap_ready_count;
reg    ap_sync_reg_Loop_1_proc_U0_ap_ready;
wire    ap_sync_Loop_1_proc_U0_ap_ready;
reg   [1:0] Loop_1_proc_U0_ap_ready_count;
wire    Block_Mat_exit354_pr_U0_start_full_n;
wire    Block_Mat_exit354_pr_U0_start_write;
wire    Loop_1_proc_U0_start_full_n;
wire    Loop_1_proc_U0_start_write;
wire    xfMat2axis_U0_start_full_n;
wire    xfMat2axis_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_tmp_9_cast344_loc_ch = 1'b0;
#0 ap_sync_reg_channel_write_tmp_9_loc_channel = 1'b0;
#0 ap_sync_reg_channel_write_base_size_cast345_lo = 1'b0;
#0 ap_sync_reg_channel_write_rows_cast350_loc_cha = 1'b0;
#0 ap_sync_reg_channel_write_cols_cast347_loc_cha = 1'b0;
#0 ap_sync_reg_channel_write_base_data_V = 1'b0;
#0 ap_sync_reg_Block_Mat_exit354_pr_U0_ap_ready = 1'b0;
#0 Block_Mat_exit354_pr_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Loop_1_proc_U0_ap_ready = 1'b0;
#0 Loop_1_proc_U0_ap_ready_count = 2'd0;
end

hw_label_accel_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
hw_label_accel_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .rows(rows),
    .cols(cols)
);

hw_label_accel_base_data_V #(
    .DataWidth( 16 ),
    .AddressRange( 153600 ),
    .AddressWidth( 18 ))
base_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(Loop_1_proc_U0_base_data_V_address0),
    .i_ce0(Loop_1_proc_U0_base_data_V_ce0),
    .i_we0(Loop_1_proc_U0_base_data_V_we0),
    .i_d0(Loop_1_proc_U0_base_data_V_d0),
    .i_q0(base_data_V_i_q0),
    .t_address0(xfMat2axis_U0_p_dst_data_V_address0),
    .t_ce0(xfMat2axis_U0_p_dst_data_V_ce0),
    .t_we0(1'b0),
    .t_d0(16'd0),
    .t_q0(base_data_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(base_data_V_i_full_n),
    .i_write(ap_channel_done_base_data_V),
    .t_empty_n(base_data_V_t_empty_n),
    .t_read(xfMat2axis_U0_ap_ready)
);

Block_Mat_exit354_pr Block_Mat_exit354_pr_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_Mat_exit354_pr_U0_ap_start),
    .ap_done(Block_Mat_exit354_pr_U0_ap_done),
    .ap_continue(Block_Mat_exit354_pr_U0_ap_continue),
    .ap_idle(Block_Mat_exit354_pr_U0_ap_idle),
    .ap_ready(Block_Mat_exit354_pr_U0_ap_ready),
    .rows(rows),
    .cols(cols),
    .rows_out_din(Block_Mat_exit354_pr_U0_rows_out_din),
    .rows_out_full_n(rows_c_full_n),
    .rows_out_write(Block_Mat_exit354_pr_U0_rows_out_write),
    .cols_out_din(Block_Mat_exit354_pr_U0_cols_out_din),
    .cols_out_full_n(cols_c_full_n),
    .cols_out_write(Block_Mat_exit354_pr_U0_cols_out_write),
    .ap_return_0(Block_Mat_exit354_pr_U0_ap_return_0),
    .ap_return_1(Block_Mat_exit354_pr_U0_ap_return_1),
    .ap_return_2(Block_Mat_exit354_pr_U0_ap_return_2)
);

Loop_1_proc Loop_1_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_1_proc_U0_ap_start),
    .ap_done(Loop_1_proc_U0_ap_done),
    .ap_continue(Loop_1_proc_U0_ap_continue),
    .ap_idle(Loop_1_proc_U0_ap_idle),
    .ap_ready(Loop_1_proc_U0_ap_ready),
    .p_read(tmp_9_loc_channel_dout),
    .src_TDATA(src_TDATA),
    .src_TVALID(src_TVALID),
    .src_TREADY(Loop_1_proc_U0_src_TREADY),
    .base_data_V_address0(Loop_1_proc_U0_base_data_V_address0),
    .base_data_V_ce0(Loop_1_proc_U0_base_data_V_ce0),
    .base_data_V_we0(Loop_1_proc_U0_base_data_V_we0),
    .base_data_V_d0(Loop_1_proc_U0_base_data_V_d0),
    .base_data_V_q0(base_data_V_i_q0),
    .cols_dout(cols_c_dout),
    .cols_empty_n(cols_c_empty_n),
    .cols_read(Loop_1_proc_U0_cols_read),
    .rows_dout(rows_c_dout),
    .rows_empty_n(rows_c_empty_n),
    .rows_read(Loop_1_proc_U0_rows_read),
    .p_read1(base_size_cast345_lo_dout),
    .p_read2(tmp_9_cast344_loc_ch_dout),
    .ap_return_0(Loop_1_proc_U0_ap_return_0),
    .ap_return_1(Loop_1_proc_U0_ap_return_1)
);

xfMat2axis xfMat2axis_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(xfMat2axis_U0_ap_start),
    .ap_done(xfMat2axis_U0_ap_done),
    .ap_continue(xfMat2axis_U0_ap_continue),
    .ap_idle(xfMat2axis_U0_ap_idle),
    .ap_ready(xfMat2axis_U0_ap_ready),
    .p_dst_data_V_address0(xfMat2axis_U0_p_dst_data_V_address0),
    .p_dst_data_V_ce0(xfMat2axis_U0_p_dst_data_V_ce0),
    .p_dst_data_V_q0(base_data_V_t_q0),
    .dst_TDATA(xfMat2axis_U0_dst_TDATA),
    .dst_TVALID(xfMat2axis_U0_dst_TVALID),
    .dst_TREADY(dst_TREADY),
    .dst_TLAST(xfMat2axis_U0_dst_TLAST),
    .rows(rows_cast350_loc_cha_dout),
    .cols(cols_cast347_loc_cha_dout)
);

fifo_w32_d2_A rows_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit354_pr_U0_rows_out_din),
    .if_full_n(rows_c_full_n),
    .if_write(Block_Mat_exit354_pr_U0_rows_out_write),
    .if_dout(rows_c_dout),
    .if_empty_n(rows_c_empty_n),
    .if_read(Loop_1_proc_U0_rows_read)
);

fifo_w32_d2_A cols_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit354_pr_U0_cols_out_din),
    .if_full_n(cols_c_full_n),
    .if_write(Block_Mat_exit354_pr_U0_cols_out_write),
    .if_dout(cols_c_dout),
    .if_empty_n(cols_c_empty_n),
    .if_read(Loop_1_proc_U0_cols_read)
);

fifo_w19_d2_A base_size_cast345_lo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit354_pr_U0_ap_return_0),
    .if_full_n(base_size_cast345_lo_full_n),
    .if_write(ap_channel_done_base_size_cast345_lo),
    .if_dout(base_size_cast345_lo_dout),
    .if_empty_n(base_size_cast345_lo_empty_n),
    .if_read(Loop_1_proc_U0_ap_ready)
);

fifo_w18_d2_A tmp_9_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit354_pr_U0_ap_return_1),
    .if_full_n(tmp_9_loc_channel_full_n),
    .if_write(ap_channel_done_tmp_9_loc_channel),
    .if_dout(tmp_9_loc_channel_dout),
    .if_empty_n(tmp_9_loc_channel_empty_n),
    .if_read(Loop_1_proc_U0_ap_ready)
);

fifo_w32_d2_A tmp_9_cast344_loc_ch_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit354_pr_U0_ap_return_2),
    .if_full_n(tmp_9_cast344_loc_ch_full_n),
    .if_write(ap_channel_done_tmp_9_cast344_loc_ch),
    .if_dout(tmp_9_cast344_loc_ch_dout),
    .if_empty_n(tmp_9_cast344_loc_ch_empty_n),
    .if_read(Loop_1_proc_U0_ap_ready)
);

fifo_w9_d2_A cols_cast347_loc_cha_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_1_proc_U0_ap_return_0),
    .if_full_n(cols_cast347_loc_cha_full_n),
    .if_write(ap_channel_done_cols_cast347_loc_cha),
    .if_dout(cols_cast347_loc_cha_dout),
    .if_empty_n(cols_cast347_loc_cha_empty_n),
    .if_read(xfMat2axis_U0_ap_ready)
);

fifo_w9_d2_A rows_cast350_loc_cha_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_1_proc_U0_ap_return_1),
    .if_full_n(rows_cast350_loc_cha_full_n),
    .if_write(ap_channel_done_rows_cast350_loc_cha),
    .if_dout(rows_cast350_loc_cha_dout),
    .if_empty_n(rows_cast350_loc_cha_empty_n),
    .if_read(xfMat2axis_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_Mat_exit354_pr_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_Mat_exit354_pr_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_Mat_exit354_pr_U0_ap_ready <= ap_sync_Block_Mat_exit354_pr_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Loop_1_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Loop_1_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Loop_1_proc_U0_ap_ready <= ap_sync_Loop_1_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_base_data_V <= 1'b0;
    end else begin
        if (((Loop_1_proc_U0_ap_done & Loop_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_base_data_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_base_data_V <= ap_sync_channel_write_base_data_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_base_size_cast345_lo <= 1'b0;
    end else begin
        if (((Block_Mat_exit354_pr_U0_ap_done & Block_Mat_exit354_pr_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_base_size_cast345_lo <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_base_size_cast345_lo <= ap_sync_channel_write_base_size_cast345_lo;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_cols_cast347_loc_cha <= 1'b0;
    end else begin
        if (((Loop_1_proc_U0_ap_done & Loop_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_cols_cast347_loc_cha <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_cols_cast347_loc_cha <= ap_sync_channel_write_cols_cast347_loc_cha;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_rows_cast350_loc_cha <= 1'b0;
    end else begin
        if (((Loop_1_proc_U0_ap_done & Loop_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_rows_cast350_loc_cha <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_rows_cast350_loc_cha <= ap_sync_channel_write_rows_cast350_loc_cha;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_tmp_9_cast344_loc_ch <= 1'b0;
    end else begin
        if (((Block_Mat_exit354_pr_U0_ap_done & Block_Mat_exit354_pr_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_tmp_9_cast344_loc_ch <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_tmp_9_cast344_loc_ch <= ap_sync_channel_write_tmp_9_cast344_loc_ch;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_tmp_9_loc_channel <= 1'b0;
    end else begin
        if (((Block_Mat_exit354_pr_U0_ap_done & Block_Mat_exit354_pr_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_tmp_9_loc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_tmp_9_loc_channel <= ap_sync_channel_write_tmp_9_loc_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Block_Mat_exit354_pr_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Block_Mat_exit354_pr_U0_ap_ready_count <= (Block_Mat_exit354_pr_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == Block_Mat_exit354_pr_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        Block_Mat_exit354_pr_U0_ap_ready_count <= (Block_Mat_exit354_pr_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (1'b0 == Loop_1_proc_U0_ap_ready))) begin
        Loop_1_proc_U0_ap_ready_count <= (Loop_1_proc_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == Loop_1_proc_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        Loop_1_proc_U0_ap_ready_count <= (Loop_1_proc_U0_ap_ready_count + 2'd1);
    end
end

assign Block_Mat_exit354_pr_U0_ap_continue = (ap_sync_channel_write_tmp_9_loc_channel & ap_sync_channel_write_tmp_9_cast344_loc_ch & ap_sync_channel_write_base_size_cast345_lo);

assign Block_Mat_exit354_pr_U0_ap_start = ((ap_sync_reg_Block_Mat_exit354_pr_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_Mat_exit354_pr_U0_start_full_n = 1'b1;

assign Block_Mat_exit354_pr_U0_start_write = 1'b0;

assign Loop_1_proc_U0_ap_continue = (ap_sync_channel_write_rows_cast350_loc_cha & ap_sync_channel_write_cols_cast347_loc_cha & ap_sync_channel_write_base_data_V);

assign Loop_1_proc_U0_ap_start = (tmp_9_loc_channel_empty_n & tmp_9_cast344_loc_ch_empty_n & (ap_sync_reg_Loop_1_proc_U0_ap_ready ^ 1'b1) & base_size_cast345_lo_empty_n & ap_start);

assign Loop_1_proc_U0_base_data_V_full_n = base_data_V_i_full_n;

assign Loop_1_proc_U0_start_full_n = 1'b1;

assign Loop_1_proc_U0_start_write = 1'b0;

assign ap_channel_done_base_data_V = ((ap_sync_reg_channel_write_base_data_V ^ 1'b1) & Loop_1_proc_U0_ap_done);

assign ap_channel_done_base_size_cast345_lo = ((ap_sync_reg_channel_write_base_size_cast345_lo ^ 1'b1) & Block_Mat_exit354_pr_U0_ap_done);

assign ap_channel_done_cols_cast347_loc_cha = ((ap_sync_reg_channel_write_cols_cast347_loc_cha ^ 1'b1) & Loop_1_proc_U0_ap_done);

assign ap_channel_done_rows_cast350_loc_cha = ((ap_sync_reg_channel_write_rows_cast350_loc_cha ^ 1'b1) & Loop_1_proc_U0_ap_done);

assign ap_channel_done_tmp_9_cast344_loc_ch = ((ap_sync_reg_channel_write_tmp_9_cast344_loc_ch ^ 1'b1) & Block_Mat_exit354_pr_U0_ap_done);

assign ap_channel_done_tmp_9_loc_channel = ((ap_sync_reg_channel_write_tmp_9_loc_channel ^ 1'b1) & Block_Mat_exit354_pr_U0_ap_done);

assign ap_done = xfMat2axis_U0_ap_done;

assign ap_idle = (xfMat2axis_U0_ap_idle & (rows_cast350_loc_cha_empty_n ^ 1'b1) & (cols_cast347_loc_cha_empty_n ^ 1'b1) & (tmp_9_cast344_loc_ch_empty_n ^ 1'b1) & (tmp_9_loc_channel_empty_n ^ 1'b1) & (base_size_cast345_lo_empty_n ^ 1'b1) & (base_data_V_t_empty_n ^ 1'b1) & Loop_1_proc_U0_ap_idle & Block_Mat_exit354_pr_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_Block_Mat_exit354_pr_U0_ap_ready = (ap_sync_reg_Block_Mat_exit354_pr_U0_ap_ready | Block_Mat_exit354_pr_U0_ap_ready);

assign ap_sync_Loop_1_proc_U0_ap_ready = (ap_sync_reg_Loop_1_proc_U0_ap_ready | Loop_1_proc_U0_ap_ready);

assign ap_sync_channel_write_base_data_V = ((ap_channel_done_base_data_V & Loop_1_proc_U0_base_data_V_full_n) | ap_sync_reg_channel_write_base_data_V);

assign ap_sync_channel_write_base_size_cast345_lo = ((base_size_cast345_lo_full_n & ap_channel_done_base_size_cast345_lo) | ap_sync_reg_channel_write_base_size_cast345_lo);

assign ap_sync_channel_write_cols_cast347_loc_cha = ((cols_cast347_loc_cha_full_n & ap_channel_done_cols_cast347_loc_cha) | ap_sync_reg_channel_write_cols_cast347_loc_cha);

assign ap_sync_channel_write_rows_cast350_loc_cha = ((rows_cast350_loc_cha_full_n & ap_channel_done_rows_cast350_loc_cha) | ap_sync_reg_channel_write_rows_cast350_loc_cha);

assign ap_sync_channel_write_tmp_9_cast344_loc_ch = ((tmp_9_cast344_loc_ch_full_n & ap_channel_done_tmp_9_cast344_loc_ch) | ap_sync_reg_channel_write_tmp_9_cast344_loc_ch);

assign ap_sync_channel_write_tmp_9_loc_channel = ((tmp_9_loc_channel_full_n & ap_channel_done_tmp_9_loc_channel) | ap_sync_reg_channel_write_tmp_9_loc_channel);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = xfMat2axis_U0_ap_done;

assign ap_sync_ready = (ap_sync_Loop_1_proc_U0_ap_ready & ap_sync_Block_Mat_exit354_pr_U0_ap_ready);

assign dst_TDATA = xfMat2axis_U0_dst_TDATA;

assign dst_TLAST = xfMat2axis_U0_dst_TLAST;

assign dst_TVALID = xfMat2axis_U0_dst_TVALID;

assign src_TREADY = Loop_1_proc_U0_src_TREADY;

assign xfMat2axis_U0_ap_continue = 1'b1;

assign xfMat2axis_U0_ap_start = (rows_cast350_loc_cha_empty_n & cols_cast347_loc_cha_empty_n & base_data_V_t_empty_n);

assign xfMat2axis_U0_start_full_n = 1'b1;

assign xfMat2axis_U0_start_write = 1'b0;

endmodule //hw_label_accel
